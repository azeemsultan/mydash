{"ast":null,"code":"import { ADD_TO_CART } from \"../constants/cartconstants\";\n\nfunction cartReducer(state = {\n  cartItems: []\n}, action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const item = action.payload;\n      const service = state.cartItems.find(x => x.service === item.service);\n\n      if (service) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.service === service.service ? item : x)\n        };\n      }\n\n      return { ...state,\n        cartItems: [...state.cartItems, item]\n      };\n\n    case CART_REMOVE_ITEM:\n      return {\n        cartItems: state.cartItems.filter(x => x.service !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { cartReducer };","map":{"version":3,"sources":["C:/Users/RBTG/Desktop/mydash/frontend/src/reducers/cartReducer.js"],"names":["ADD_TO_CART","cartReducer","state","cartItems","action","type","item","payload","service","find","x","map","CART_REMOVE_ITEM","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,4BAA5B;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAA3B,EAA2CC,MAA3C,EAAkD;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,WAAL;AACI,YAAMM,IAAI,GAAEF,MAAM,CAACG,OAAnB;AACA,YAAMC,OAAO,GAAEN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAGA,CAAC,CAACF,OAAF,KAAaF,IAAI,CAACE,OAA3C,CAAf;;AAEA,UAAGA,OAAH,EAAW;AACR,eAAO,EAAC,GAAGN,KAAJ;AAAWC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,CAAoBD,CAAC,IAAGA,CAAC,CAACF,OAAF,KAAYA,OAAO,CAACA,OAApB,GAA6BF,IAA7B,GAAoCI,CAA5D;AAAtB,SAAP;AACF;;AAED,aAAM,EACF,GAAGR,KADD;AACQC,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AADnB,OAAN;;AAGA,SAAKM,gBAAL;AACI,aAAM;AAAET,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAEA,CAAC,CAACF,OAAF,KAAcJ,MAAM,CAACG,OAA/C;AAAb,OAAN;;AAEJ;AACI,aAAOL,KAAP;AAhBZ;AAkBH;;AAED,SAASD,WAAT","sourcesContent":["import { ADD_TO_CART } from \"../constants/cartconstants\";\r\n\r\nfunction cartReducer(state={cartItems:[]}, action){\r\n    switch(action.type){\r\n        case ADD_TO_CART:\r\n            const item= action.payload;\r\n            const service= state.cartItems.find(x=> x.service=== item.service);\r\n\r\n            if(service){\r\n               return {...state, cartItems: state.cartItems.map(x=> x.service===service.service? item : x)};\r\n            }\r\n\r\n            return{\r\n                ...state, cartItems: [...state.cartItems, item] \r\n            };\r\n            case CART_REMOVE_ITEM:\r\n                return{ cartItems: state.cartItems.filter(x=>x.service !== action.payload)}\r\n\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport { cartReducer}"]},"metadata":{},"sourceType":"module"}