{"ast":null,"code":"import Axios from 'axios';\nimport Cookie from 'js-cookie';\n\nconst {\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNIN_FAIL\n} = require(\"../constants/userconstants\");\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin };","map":{"version":3,"sources":["C:/Users/RBTG/Desktop/mydash/frontend/src/actions/userAction.js"],"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","require","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AACA,MAAM;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA,mBAAvB;AAA4CC,EAAAA;AAA5C,IAAiEC,OAAO,CAAC,4BAAD,CAA9E;;AAEA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB,MAAOC,QAAP,IAAkB;AACjDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAER,mBAAP;AAA4BS,IAAAA,OAAO,EAAC;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAApC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMZ,KAAK,CAACa,IAAN,CAAW,mBAAX,EAAgC;AAACN,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAhC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,mBAAP;AAA2BQ,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AAEAX,IAAAA,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACH,GALD,CAMA,OAAMK,KAAN,EAAY;AACRR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,gBAAP;AAAyBO,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAxC,KAAD,CAAR;AACH;AACJ,CAXD;;AAcA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAMb,KAAN,EAAYC,QAAZ,KAAyB,MAAOC,QAAP,IAAkB;AACxDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEW,qBAAP;AAA8BV,IAAAA,OAAO,EAAC;AAACS,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd;AAAtC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMZ,KAAK,CAACa,IAAN,CAAW,qBAAX,EAAkC;AAACO,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAaC,MAAAA;AAAb,KAAlC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEY,qBAAP;AAA6BX,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AAEAX,IAAAA,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACH,GALD,CAMA,OAAMK,KAAN,EAAY;AACRR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEa,kBAAP;AAA2BZ,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAXD;;AAYA,SAASZ,MAAT","sourcesContent":["import Axios from 'axios'\r\nimport Cookie from 'js-cookie'\r\nconst { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL } = require(\"../constants/userconstants\");\r\n\r\nconst signin = (email,password) => async (dispatch)=>{\r\n    dispatch({type: USER_SIGNIN_REQUEST, payload:{ email, password}});\r\n    try{\r\n        const {data} = await Axios.post(\"/api/users/signin\", {email,password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS,payload: data});\r\n\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n    }\r\n    catch(error){\r\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\n\r\nconst register = (name,email,password) => async (dispatch)=>{\r\n    dispatch({type: USER_REGISTER_REQUEST, payload:{name, email, password}});\r\n    try{\r\n        const {data} = await Axios.post(\"/api/users/register\", {name, email,password});\r\n        dispatch({type: USER_REGISTER_SUCCESS,payload: data});\r\n\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n    }\r\n    catch(error){\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.message});\r\n    }\r\n}\r\nexport { signin};"]},"metadata":{},"sourceType":"module"}